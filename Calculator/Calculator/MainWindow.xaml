<Window x:Class="Calculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Calculator"
        xmlns:cmd="http://schemas.microsoft.com/expression/blend/2008" 
        mc:Ignorable="d"
        Title="Calculator" Height="450" Width="330" ResizeMode="NoResize">
    <Window.Resources>

        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Storyboard x:Key="SlideMenuStoryboard">
            <DoubleAnimation
                Storyboard.TargetName="SlidingMenu"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                From="90" To="0" Duration="0:0:0.3" />
            <DoubleAnimation
                Storyboard.TargetName="ToggleButton"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                From="0" To="-90" Duration="0:0:0.3" />
        </Storyboard>
        <Storyboard x:Key="HideMenuStoryboard">
            <DoubleAnimation
                Storyboard.TargetName="SlidingMenu"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                From="0" To="90" Duration="0:0:0.3" />
            <DoubleAnimation
                Storyboard.TargetName="ToggleButton"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                From="-90" To="0" Duration="0:0:0.3" />
        </Storyboard>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="85*"/>
            <RowDefinition Height="132*"/>
        </Grid.RowDefinitions>
        <TabControl Grid.RowSpan="2" SelectedIndex="{Binding SelectedTabIndex, Mode=TwoWay}">
            <TabItem Header="Standard">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="82*"/>
                        <RowDefinition Height="57*"/>
                        <RowDefinition Height="267*"/>
                    </Grid.RowDefinitions>
                    <TextBox x:Name="MyTextBox" HorizontalAlignment="Center" IsReadOnly="True" TextWrapping="NoWrap" MaxLength="16" 
                PreviewKeyDown="MyTextBox_PreviewKeyDown" PreviewTextInput="MyTextBox_PreviewTextInput" Height="60" FontSize="34" Text="{Binding DisplayText, Mode=TwoWay}" VerticalAlignment="Center" Width="298" Grid.Row="1"/>
                    <UniformGrid Rows="1" Columns="5"  Margin="10,0,61,0" Height="149" VerticalAlignment="Top" Grid.Row="1" Grid.RowSpan="3">
                        <Button Content="MC" Command="{Binding ButtonCommand}" CommandParameter="MC" FontSize="14"  Height="27" VerticalAlignment="Top" Margin="0,109,5,0" BorderThickness="0" Background="Transparent"/>
                        <Button Content="MR" Command="{Binding ButtonCommand}" CommandParameter="MR" FontSize="14"  Height="27" VerticalAlignment="Top" Margin="0,109,5,0" BorderThickness="0" Background="Transparent"/>
                        <Button Content="M+" Command="{Binding ButtonCommand}" CommandParameter="M+" FontSize="14"  Height="27" VerticalAlignment="Top" Margin="0,109,5,0" BorderThickness="0" Background="Transparent"/>
                        <Button Content="M-" Command="{Binding ButtonCommand}" CommandParameter="M-" FontSize="14"  Height="27" VerticalAlignment="Top" Margin="3,109,2,0" BorderThickness="0" Background="Transparent"/>
                        <Button Content="MS" Command="{Binding ButtonCommand}" CommandParameter="MS" FontSize="14" Height="27" VerticalAlignment="Top" Margin="0,109,0,0" BorderThickness="0" Background="Transparent" HorizontalAlignment="Center" Width="56"/>
                    </UniformGrid>
                    <Button Content="M>" Command="{Binding ButtonCommand}" CommandParameter="M>" FontSize="14" Height="27" VerticalAlignment="Top" Margin="261,32,15,0" BorderThickness="0" Background="Transparent" Grid.Row="2" RenderTransformOrigin="0.488,0.275" Grid.RowSpan="2"/>
                    <ListBox ItemsSource="{Binding MemoryValues}" Background="DarkGray"   Foreground="Black"
             FontSize="20" Height="241" VerticalAlignment="Center" Margin="234,0,0,0" Opacity="0.9" 
             Visibility="{Binding IsMemoryVisible, Converter={StaticResource BoolToVisibilityConverter}}" 
             Canvas.ZIndex="10" RenderTransformOrigin="8.516,0.662" Grid.Row="3" >
                    </ListBox>
                    <UniformGrid Grid.Row="3" Rows="7" Columns="4" Margin="0,4,0,-40">
                        <Button Content="%" Command="{Binding ButtonCommand}" CommandParameter="%" FontSize="24" Margin="3" />
                        <Button Content="CE" Command="{Binding ButtonCommand}" CommandParameter="CE" FontSize="24"  Margin="3"/>
                        <Button Content="C" Command="{Binding ButtonCommand}" CommandParameter="CDelete" FontSize="24"  Margin="3"/>
                        <Button Content="⌫"  Command="{Binding ButtonCommand}" CommandParameter="Back" FontSize="24"  Margin="3"/>
                        <Button Content="⅟x" Command="{Binding ButtonCommand}" CommandParameter="1/x" FontSize="24"  Margin="3"/>
                        <Button Content="x²" Command="{Binding ButtonCommand}" CommandParameter="Pow" FontSize="24"  Margin="3"/>
                        <Button Content="√x" Command="{Binding ButtonCommand}" CommandParameter="Sqrt" FontSize="24" Margin="3"/>
                        <Button Content="÷" Command="{Binding ButtonCommand}" CommandParameter="/" FontSize="24" Margin="3"/>
                        <Button Content="7" Command="{Binding ButtonCommand}" CommandParameter="7" FontSize="24" Margin="3"/>
                        <Button Content="8" Command="{Binding ButtonCommand}" CommandParameter="8" FontSize="24" Margin="3"/>
                        <Button Content="9" Command="{Binding ButtonCommand}" CommandParameter="9" FontSize="24" Margin="3"/>
                        <Button Content="×" Command="{Binding ButtonCommand}" CommandParameter="*" FontSize="24" Margin="3"/>
                        <Button Content="4" Command="{Binding ButtonCommand}" CommandParameter="4" FontSize="24" Margin="3"/>
                        <Button Content="5" Command="{Binding ButtonCommand}" CommandParameter="5" FontSize="24" Margin="3"/>
                        <Button Content="6" Command="{Binding ButtonCommand}" CommandParameter="6" FontSize="24" Margin="3"/>
                        <Button Content="-" Command="{Binding ButtonCommand}" CommandParameter="-" FontSize="24" Margin="3"/>
                        <Button Content="1" Command="{Binding ButtonCommand}" CommandParameter="1" FontSize="24"  Margin="3"/>
                        <Button Content="2" Command="{Binding ButtonCommand}" CommandParameter="2" FontSize="24" Margin="3"/>
                        <Button Content="3" Command="{Binding ButtonCommand}" CommandParameter="3" FontSize="24" Margin="3"/>
                        <Button Content="+" Command="{Binding ButtonCommand}" CommandParameter="+" FontSize="24" Margin="3"/>
                        <Button Content="+/-" Command="{Binding ButtonCommand}" CommandParameter="Sign" FontSize="24" Margin="3"/>
                        <Button Content="0"  Command="{Binding ButtonCommand}" CommandParameter="0" FontSize="24" Margin="3"/>
                        <Button Content="." Command="{Binding ButtonCommand}" CommandParameter="dot" FontSize="24" Margin="3"/>
                        <Button Content="=" Command="{Binding ButtonCommand}" CommandParameter="=" FontSize="24" Margin="3"/>
                    </UniformGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Programmer" Margin="7,0,0,-2" HorizontalAlignment="Left" Width="90">
                <Grid Margin="0,0,-2,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="37*"/>
                        <ColumnDefinition Width="277*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="143*"/>
                        <RowDefinition Height="23*"/>
                        <RowDefinition Height="240*"/>
                    </Grid.RowDefinitions>

                    <TextBox HorizontalAlignment="Left" IsReadOnly="True" TextWrapping="NoWrap" MaxLength="16" 
         PreviewKeyDown="MyTextBox_PreviewKeyDown" PreviewTextInput="MyTextBox_PreviewTextInput" 
         Height="58" FontSize="34" Text="{Binding DisplayText, Mode=TwoWay}" 
         VerticalAlignment="Center" Width="292" Grid.Row="1" Grid.ColumnSpan="2" Margin="10,0,0,0"/>
                    <UniformGrid Grid.Row="1" Rows="1" Columns="6" Margin="10,10,10,0" Height="50" VerticalAlignment="Top" Grid.ColumnSpan="2">
                        <RadioButton Content="HEX" Command="{Binding BaseCommand}"  CommandParameter="HEX" IsChecked="{Binding IsHexChecked}" />
                        <RadioButton Content="DEC" Command="{Binding BaseCommand}"  CommandParameter="DEC" IsChecked="{Binding IsDecChecked}"/>
                        <RadioButton Content="OCT" Command="{Binding BaseCommand}"  CommandParameter="OCT" IsChecked="{Binding IsOctChecked}"/>
                        <RadioButton Content="BIN" Command="{Binding BaseCommand}"  CommandParameter="BIN" IsChecked="{Binding IsBinChecked}"/>
                    </UniformGrid>
                    <Button Grid.Column="1" Content="MS" FontSize="14" Command="{Binding ButtonCommand}" CommandParameter="MS" HorizontalAlignment="Left" Margin="167,117,0,0"  Height="25" Grid.Row="1" VerticalAlignment="Top" BorderThickness="0" Background="Transparent"  Width="46"/>
                    <Button Grid.Column="1" Content="M>" FontSize="14" Command="{Binding ButtonCommand}" CommandParameter="M>" HorizontalAlignment="Left" Margin="218,117,0,0"  Height="25" Grid.Row="1" VerticalAlignment="Top" BorderThickness="0" Background="Transparent"  Width="46"/>
                    <ListBox ItemsSource="{Binding MemoryValues}" Background="DarkGray"   Foreground="Black" FontSize="20" Height="255" VerticalAlignment="Top" Margin="216,8,0,0" Opacity="0.9" 
Visibility="{Binding IsMemoryVisible, Converter={StaticResource BoolToVisibilityConverter}}" 
Canvas.ZIndex="10" RenderTransformOrigin="8.516,0.662" Grid.Row="2" Grid.Column="1" Grid.RowSpan="2" >
                    </ListBox>
                    <UniformGrid Grid.Row="2" Rows="6" Columns="5" Grid.ColumnSpan="2" Margin="0,8,0,2" Grid.RowSpan="2">
                        <Button Content="A" Command="{Binding ButtonCommand}" CommandParameter="A" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsHexChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="%" Command="{Binding ButtonCommand}" CommandParameter="%" FontSize="24" Margin="3"/>
                        <Button Content="÷" Command="{Binding ButtonCommand}" CommandParameter="/" FontSize="24" Margin="3"/>
                        <Button Content="C" Command="{Binding ButtonCommand}" CommandParameter="CDelete" FontSize="24" Margin="3"/>
                        <Button Content="⌫" Command="{Binding ButtonCommand}" CommandParameter="Back" FontSize="24" Margin="3"/>

                        <Button Content="B" Command="{Binding ButtonCommand}" CommandParameter="B" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsHexChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="7" Command="{Binding ButtonCommand}" CommandParameter="7" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsBinChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="8" Command="{Binding ButtonCommand}" CommandParameter="8" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsBinChecked}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsOctChecked}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>


                        <Button Content="9" Command="{Binding ButtonCommand}" CommandParameter="9" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsBinChecked}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsOctChecked}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="×" Command="{Binding ButtonCommand}" CommandParameter="*" FontSize="24" Margin="3"/>


                        <Button Content="C" Command="{Binding ButtonCommand}" CommandParameter="C" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsHexChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="4" Command="{Binding ButtonCommand}" CommandParameter="4" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsBinChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="5" Command="{Binding ButtonCommand}" CommandParameter="5" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsBinChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="6" Command="{Binding ButtonCommand}" CommandParameter="6" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsBinChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="-" Command="{Binding ButtonCommand}" CommandParameter="-" FontSize="24" Margin="3"/>


                        <Button Content="D" Command="{Binding ButtonCommand}" CommandParameter="D" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsHexChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="1" Command="{Binding ButtonCommand}" CommandParameter="1" FontSize="24" Margin="3"/>

                        <Button Content="2" Command="{Binding ButtonCommand}" CommandParameter="2" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsBinChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="3" Command="{Binding ButtonCommand}" CommandParameter="3" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsBinChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="+" Command="{Binding ButtonCommand}" CommandParameter="+" FontSize="24" Margin="3"/>


                        <Button Content="E" Command="{Binding ButtonCommand}" CommandParameter="E" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsHexChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Content="0" Command="{Binding ButtonCommand}" CommandParameter="0" FontSize="24" Margin="3"/>
                        <Button Content="." Command="{Binding ButtonCommand}" CommandParameter="dot" FontSize="24" Margin="3"/>
                        <Button Content="=" Command="{Binding ButtonCommand}" CommandParameter="=" FontSize="24" Margin="3"/>
                        <Button Content="+/-" Command="{Binding ButtonCommand}" CommandParameter="Sign" FontSize="24" Margin="3"/>

                        <Button Content="F" Command="{Binding ButtonCommand}" CommandParameter="F" FontSize="24" Margin="3">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsHexChecked}" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </UniformGrid>

                </Grid>
            </TabItem>
        </TabControl>

        <Grid x:Name="SlidingMenu" Width="90" Background="LightGray" VerticalAlignment="Top"
      HorizontalAlignment="Right" RenderTransformOrigin="1,0">
            <Grid.RenderTransform>
                <TranslateTransform X="90" />
            </Grid.RenderTransform>

            <Menu Background="LightGray" Width="90" >
                <Menu.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Width" Value="90"/>
                    </Style>
                </Menu.ItemContainerStyle>

                <MenuItem Header="File" Width="90" HorizontalAlignment="Left">
                    <MenuItem Header="Cut" Command="{Binding MenuCommand}" CommandParameter="Cut" HorizontalAlignment="Left"/>
                    <MenuItem Header="Copy" Command="{Binding MenuCommand}" CommandParameter="Copy" HorizontalAlignment="Left"/>
                    <MenuItem Header="Paste" Command="{Binding MenuCommand}" CommandParameter="Paste" HorizontalAlignment="Left"/>
                    <MenuItem Header="Digit Grouping" HorizontalAlignment="Left">
                        <MenuItem Header="RO" IsCheckable="True" Command="{Binding MenuCommand}" CommandParameter="RO" IsChecked="{Binding IsROChecked}"/>
                        <MenuItem Header="US" IsCheckable="True" Command="{Binding MenuCommand}" CommandParameter="US" IsChecked="{Binding IsUSChecked}"/>
                    </MenuItem>
                    <MenuItem Header="Evaluate Expression" IsCheckable="True" Command="{Binding MenuCommand}" CommandParameter="Expr" HorizontalAlignment="Left" IsChecked="{Binding IsExprChecked}"/>
                </MenuItem>

                <MenuItem Header="Help" Width="90">
                    <MenuItem Header="About">
                        <MenuItem Header="Vaida Raluca Maria 10LF333"/>
                    </MenuItem>
                </MenuItem>
            </Menu>
        </Grid>
        <Button x:Name="ToggleButton" Content="☰" FontSize="12" HorizontalAlignment="Right"
        VerticalAlignment="Top" Width="35" Height="21.5" Command="{Binding ToggleMenuCommand}"
        Margin="0,0,10,0" BorderBrush="Transparent" BorderThickness="0"/>
    </Grid>
</Window>